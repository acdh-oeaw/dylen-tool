stages:
  - build
 # - test
  - deploy

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_BRANCH == "master"

# build development

build-dev:
  image: docker:19-dind
  stage: build
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:19-dind
      command: ["--mtu=1450"]
  tags:
    - cluster
  script:
    - export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
    - export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG .
    - docker push $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev"'
    - if: $CI_MERGE_REQUEST_IID
    - if: '$CI_COMMIT_BRANCH'

# deploy development
deploy-dev:
  image: "registry.gitlab.com/gitlab-org/cluster-integration/auto-deploy-image:v1.0.7"
  stage: deploy
  variables:
    POSTGRES_ENABLED: "false"
    HELM_UPGRADE_EXTRA_ARGS: "--set ingress.tls.enabled=false --set service.externalPort=80 --set service.internalPort=80 --set readinessProbe.timeoutSeconds=30 --set livenessProbe.timeoutSeconds=30"
    ROLLOUT_RESOURCE_TYPE: deployment
    ENVIRONMENT: "dev"
  script:
    - auto-deploy check_kube_domain
    - auto-deploy download_chart
    - auto-deploy ensure_namespace
    - auto-deploy initialize_tiller
    - auto-deploy create_secret
    - auto-deploy deploy
    - auto-deploy delete canary
    - auto-deploy delete rollout
    - auto-deploy persist_environment_url
  environment:
    name: dylen-tool-dev
    url: https://dylen-tool.acdh-dev.oeaw.ac.at
    kubernetes:
      namespace: dylen-tool-dev
  artifacts:
    paths: [environment_url.txt, tiller.log]
    when: always
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev"'

deploy_review:
  image: "registry.gitlab.com/gitlab-org/cluster-integration/auto-deploy-image:v1.0.7"
  stage: deploy
  variables:
    POSTGRES_ENABLED: "false"
    HELM_UPGRADE_EXTRA_ARGS: "--set ingress.tls.enabled=false --set service.externalPort=80 --set service.internalPort=80 --set readinessProbe.timeoutSeconds=30 --set livenessProbe.timeoutSeconds=30"
    ROLLOUT_RESOURCE_TYPE: deployment
    ENVIRONMENT: "review"
  script:
    - auto-deploy check_kube_domain
    - auto-deploy download_chart
    - auto-deploy ensure_namespace
    - auto-deploy initialize_tiller
    - auto-deploy create_secret
    - auto-deploy deploy
    - auto-deploy delete canary
    - auto-deploy delete rollout
    - auto-deploy persist_environment_url
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.acdh-dev.oeaw.ac.at
    kubernetes:
      namespace: dylen-review-stage
  only:
    - branches
  except:
    - master
    - dev

# build production
build-prod:
  image: docker:19-dind
  stage: build
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  services:
    - name: docker:19-dind
      command: ["--mtu=1450"]
  tags:
    - cluster
  script:
    - export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
    - export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG .
    - docker push $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'



# deploy production
deploy-prod:
  image: "registry.gitlab.com/gitlab-org/cluster-integration/auto-deploy-image:v1.0.7"
  stage: deploy
  variables:
    POSTGRES_ENABLED: "false"
    HELM_UPGRADE_EXTRA_ARGS: "--set ingress.tls.enabled=false --set service.externalPort=80 --set service.internalPort=80 --set readinessProbe.timeoutSeconds=30 --set livenessProbe.timeoutSeconds=30"
    ROLLOUT_RESOURCE_TYPE: deployment
    ENVIRONMENT: "prod"
  script:
    - auto-deploy check_kube_domain
    - auto-deploy download_chart
    - auto-deploy ensure_namespace
    - auto-deploy initialize_tiller
    - auto-deploy create_secret
    - auto-deploy deploy
    - auto-deploy delete canary
    - auto-deploy delete rollout
    - auto-deploy persist_environment_url
  environment:
    name: dylen-tool-prod
    url: https://dylen-tool.acdh.oeaw.ac.at
    kubernetes:
      namespace: dylen-tool-prod
  artifacts:
    paths: [environment_url.txt, tiller.log]
    when: always
  rules:
    - if: '$CI_COMMIT_REF_NAME == "master"'
